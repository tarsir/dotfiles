### DOCKER
function d.use {
    eval $(docker-machine env $1)
    build_prompt
}

function d.cid {
    docker ps | grep $1 | grep "Up" | cut -d " " -f 1
}

function d.bash {
    CONTAINER_NAME=${1:-NULL}
    if [ ${CONTAINER_NAME} = "" ]; then
        echo "Please specify a container name"
    else
        CONTAINER_ID=$(d.cid ${CONTAINER_NAME})
        echo "Connecting to container ${CONTAINER_ID}"
        docker exec -it ${CONTAINER_ID} bash
    fi
}

function d.test {
    # runs python tests - maybe make this cool later idk
    docker exec -t $(d.cid avercloud_app) py.test /aver/avercloud/test/app
}

function d.rps { 
    # to get running containers
    docker ps -a --filter "status=running" --format "{{.ID}} | {{.Status}} | {{.Command}} | {{.Image}}"
}

function d.up {
    docker-compose up -d --force-recreate && dc logs -f app web
}

function d.rs {
    docker-compose up -d --force-recreate ${ARGS[*]} && dc logs -f app web
}

alias dm='docker-machine'
alias dc='docker-compose'
alias d.nuke='docker stop $(docker ps -a -q) && docker rm --volumes=true $(docker ps -a -q)'
alias d.inf="docker ps -a"
alias d.rs="docker-machine restart"
