GIT_REPO_DIR="${HOME}/Development/gitcomplete/git/contrib/completion"
GIT_COMPLETION_URL="https://raw.githubusercontent.com/git/git/master/contrib/completion"
# make sure the two files I use exist

mkdir -p ${GIT_REPO_DIR}
if [ ! -s ${GIT_REPO_DIR}/git-completion.bash ]; then
    echo "Downloading git-completion script"
    curl -s ${GIT_COMPLETION_URL}/git-completion.bash > $GIT_REPO_DIR/git-completion.bash
fi
if [ ! -s ${GIT_REPO_DIR}/git-prompt.sh ]; then
    echo "Downloading git-prompt script"
    curl -s ${GIT_COMPLETION_URL}/git-prompt.sh > $GIT_REPO_DIR/git-prompt.sh

    # go ahead and put first time git config here too
    git config --global user.email "stephen.hara@stephenhara.com"
    git config --global user.name "Stephen Hara"
fi

source $GIT_REPO_DIR/git-completion.bash
source $GIT_REPO_DIR/git-prompt.sh

function _gitRemoteSet(){
    git branch --set-upstream-to=origin/"$1" "$1"
}

function g.untracked {
    g.s | sed -n -e '/Untracked files/,$p' | tail -n +4 | sed '$d' | sed '$d'
}

# nifty git aliases

alias git-tree="git log --graph --pretty=oneline --abbrev-commit"
alias g.log="clear; git log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)â€” %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative"
alias g.co="git checkout"
alias g.s="git status"
alias g.d="git diff"
alias g.b="git branch -v --sort=committerdate"
alias g.p="git pull -r"
alias g.c="git commit -v"
alias g.cv="git commit --no-verify -v"
alias g.grs="_gitRemoteSet"
alias g.pf="git push --force-with-lease"

# add git aliases to auto-completion
__git_complete g.co _git_checkout
__git_complete g.s _git_status
__git_complete g.d _git_diff
__git_complete g.b _git_branch
__git_complete g.p _git_pull

### Global config
# Use this .gitignore for system
git config --global core.excludesfile '~/.gitignore'
git config --global core.editor "nvim"
git config --global push.autoSetupRemote "true"
git config --global pull.rebase "true"

# ez dos2unix on all modified files
function line_endings() {
    for f in $(git status -s | awk '{for (i = 1; i <= NF; i++) { if ($i != "M" && $i != "A" && $i != "D") { print $i }}}')
        do dos2unix $f
    done
}
